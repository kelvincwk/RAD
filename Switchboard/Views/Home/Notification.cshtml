@{
    ViewBag.Title = "Notification";
}
<h2>Notification</h2>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" /><img id="alerts" src="~/images/alerts.gif" class="alertsIcon hiddenControl" />
    <input type="hidden" id="email" />
    @Html.ActionLink("Watch my storage", "SubscribeStorageChanges", new { name = "BOT", email = "kelvincheah06@gmail.com" })
    <ul id="console"></ul>
</div>
<h2>Mimic NotifyStorageChanges web_hook callback</h2>

@using (Html.BeginForm("NotifyStorageChanges", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">            
        <div class="form-group">
            <div>
                <input type="submit" value="NotifyStorageChanges" class="btn" />
            </div>
        </div>
    </div>
}

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the notification page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var notification = $.connection.notificationHub;
            // Create a function that the hub can call back to display messages.
            notification.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#console').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            notification.client.displayDriveChangesNotification = function (count) {
                $("#alerts").removeClass("hiddenControl");
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val("@Guid.NewGuid().ToString()");
            $('#email').val('kelvincheah06@gmail.com');
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    notification.server.notify($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}